version: "3.7"

services:
  traefik:
    image: traefik:v2.0
    ports:
      - 80:80
      - 443:443
      - 8080:8080
      - 5432:5432
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml
    labels:
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$7eKhghUC$$/bOVmcYI2ZekGcKM2RBuE0
      - traefik.http.routers.api-non-tls.rule=Host(`traefik.localhost`)
      - traefik.http.routers.api-non-tls.entrypoints=web
      - traefik.http.routers.api-non-tls.middlewares=https-redirect
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.rule=Host(`traefik.localhost`)
      - traefik.http.routers.api.service=api@internal
      - traefik.http.routers.api.middlewares=auth
      - traefik.http.routers.api.entrypoints=web-secure

  backend:
    build: api
    command: python manage.py runserver 0.0.0.0:80
    volumes:
      - ./api/api:/usr/src/app/api
      - ./api/project:/usr/src/app/project
    environment:
      AWS_S3_ENDPOINT_URL: http://storage:9000/
      AWS_S3_CUSTOM_DOMAIN: storage.localhost/django
      SECRET_KEY: ${API_SECRET_KEY}
      DB_PASSWORD: ${DB_PASSWORD}
      AWS_ACCESS_KEY: ${STORAGE_ACCESS_KEY}
      AWS_SECRET_KEY: ${STORAGE_SECRET_KEY}
      DEBUG: "True"
      SITE_URL: https://web.localhost/
    labels:
      - traefik.http.routers.backend.rule=Host(`api.localhost`)
      - traefik.http.routers.backend.middlewares=https-redirect
      - traefik.http.routers.backend.entrypoints=web
      - traefik.http.routers.backend-tls.rule=Host(`api.localhost`)
      - traefik.http.routers.backend-tls.tls=true
      - traefik.http.routers.backend-tls.entrypoints=web-secure

  web:
    build: web
    command: npm run dev -- -H 0.0.0.0 -p 80
    volumes:
      - ./web/assets:/usr/src/app/assets
      - ./web/components:/usr/src/app/components
      - ./web/layouts:/usr/src/app/layouts
      - ./web/middleware:/usr/src/app/middleware
      - ./web/pages:/usr/src/app/pages
      - ./web/plugins:/usr/src/app/plugins
      - ./web/static:/usr/src/app/static
      - ./web/store:/usr/src/app/store
      - ./web/nuxt.config.js:/usr/src/app/nuxt.config.js
    labels:
      - traefik.http.routers.web.rule=Host(`web.localhost`)
      - traefik.http.routers.web.middlewares=https-redirect
      - traefik.http.routers.web.entrypoints=web
      - traefik.http.routers.web-tls.rule=Host(`web.localhost`)
      - traefik.http.routers.web-tls.tls=true
      - traefik.http.routers.web-tls.entrypoints=web-secure
    environment:
      AXIOS_BASE_URL: http://backend/
      AXIOS_BROWSER_BASE_URL: https://api.localhost/

  db:
    image: postgres:11.5-alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db:/var/lib/postgresql/data
    labels:
      - traefik.enable=false

  storage:
    image: minio/minio
    command: server /data
    volumes:
      - storage:/data
    environment:
      MINIO_ACCESS_KEY: ${STORAGE_ACCESS_KEY}
      MINIO_SECRET_KEY: ${STORAGE_SECRET_KEY}
    labels:
      - traefik.http.routers.storage.rule=Host(`storage.localhost`)
      - traefik.http.routers.storage.middlewares=https-redirect
      - traefik.http.routers.storage.entrypoints=web
      - traefik.http.routers.storage-tls.rule=Host(`storage.localhost`)
      - traefik.http.routers.storage-tls.tls=true
      - traefik.http.routers.storage-tls.entrypoints=web-secure

volumes:
  db:
  storage:
